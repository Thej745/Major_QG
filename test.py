from pprint import pprint
import nltk

nltk.download('stopwords')
from Questgen import main

############### BOOLEAN ############################
def boolean(payload):
    qe= main.BoolQGen()
    output = qe.predict_boolq(payload)
    pprint (output)


################### MCQs ###########################
def MCQ(payload):
    qg = main.QGen()
    output = qg.predict_mcq(payload)
    pprint(output)

################## FAQs ###########################
def FAQ(payload):
    qg = main.QGen()
    output = qg.predict_shortq(payload)
    pprint (output)

def main_func():
    payload = {
                "input_text": """Bluetooth technology was designed originally for cable replacement and short-range ad hoc connectivity. It operates
in the 2.4 GHz ISM frequency band exploiting 79 RF channels of 1 MHz width each, thus defining a maximum
transmission rate of 1 Mbps. The building block of a Bluetooth Personal Area Network is represented by the
Piconet, i.e. a set of up to eight devices sharing the same physical channel. One of these devices assumes the
role of Master (in charge of establishing and managing the communication), and all the others play the role of
Slave. These devices are synchronized on the same clock and adopt the same frequency hopping scheme based
on a Time Division Multiplexing technique that divides the channel in 625 Î¼sec slots. Transmissions occur in
packets that occupy an odd number of slots (up to five) and are transmitted on different hop frequencies with a
maximum hop frequency rate of 1600 hops/sec. The communication protocol is divided mainly to in two phases:
the discovery phase in which the master device discovers up to seven active slaves in its transmission range and
exchanges data necessary for synchronization, and the data exchange. Therefore, data can be transferred between
the master and one slave; then the master switches from one slave to another in a round-robin fashion. Two
types of communication link are defined: Asynchronous Connection-Less (ACL), an asymmetric point-to-point
6 These results are obtained by considering a crystal tolerance of better than 25 ppm defined as the initial deviation of the
crystal or oscillator frequency as compared to the absolute at 25C.
P1: TIX/XYZ P2: ABC
JWST063-08 JWST063-Obaidat April 20, 2011 19:49 Printer Name: Yet to Come
Wearable Computing and Sensor Systems for Healthcare 127
link between the master and the active slaves using retransmissions to guarantee data integrity; Synchronous
Connection-Oriented (SCO), a symmetric point-to-point connection between the master and a specific slave at a
regular time interval. The latter is designed mainly for supporting real-time traffic (e.g. voice), while the former is
dedicated to data communications as necessary for healthcare applications. Evaluating end-to-end delays, packet
loss at the receiving node, and efficiency in terms of the ratio between the successful received data packets and the
number of data packets generated by the application layer for that receiver, the simulation results in [51] show that
Bluetooth technology presents mainly scalability issues related to the limited number of sensors for the collecting
device (max seven slaves for each Piconet) and packet loss problems in case of multiple piconets for the same
receiver (master) due to interferences. Even though power consumption during transmission is quite low, the need
for Bluetooth devices to be active continuously for device discovery or join new piconets implies higher power
requirements. Nevertheless, Bluetooth is one of the most frequently used technologies in Health BAN, probably
because it is integrated natively in a high number of mobile devices, while it is not easy to find a smartphone
equipped with a ZigBee wireless card.7 In the last few years, Bluetooth SIG has worked on a new standard aimed at
reducing the power consumption of Bluetooth devices, as well as meeting medical application requirements. This
standard is called Bluetooth Low Energy and it mainly redesigns the communication protocol while maintaining
its basic features."""
            }
    #MCQ(payload)
    #boolean(payload)
    FAQ(payload)
  
if __name__=="__main__":
    main_func()